version: '2'

services:

  zookeeper1.samplenet.com:
    container_name: zookeeper1.samplenet.com
    image: hyperledger/fabric-zookeeper:x86_64-1.1.0-preview
    restart: always
    environment:
      - ZOO_MY_ID=1
      - ZOO_SERVERS=server.1=zookeeper1.samplenet.com:2888:3888 server.2=zookeeper2.samplenet.com:2888:3888 server.3=zookeeper3.samplenet.com:2888:3888 
    ports:
      - 2181
      - 2888
      - 3888
  
  zookeeper2.samplenet.com:
    container_name: zookeeper2.samplenet.com
    image: hyperledger/fabric-zookeeper:x86_64-1.1.0-preview
    restart: always
    environment:
      - ZOO_MY_ID=2
      - ZOO_SERVERS=server.1=zookeeper1.samplenet.com:2888:3888 server.2=zookeeper2.samplenet.com:2888:3888 server.3=zookeeper3.samplenet.com:2888:3888 
    ports:
      - 2181
      - 2888
      - 3888
  
  zookeeper3.samplenet.com:
    container_name: zookeeper3.samplenet.com
    image: hyperledger/fabric-zookeeper:x86_64-1.1.0-preview
    restart: always
    environment:
      - ZOO_MY_ID=3
      - ZOO_SERVERS=server.1=zookeeper1.samplenet.com:2888:3888 server.2=zookeeper2.samplenet.com:2888:3888 server.3=zookeeper3.samplenet.com:2888:3888 
    ports:
      - 2181
      - 2888
      - 3888
  
  kafka1.samplenet.com:
    container_name: kafka1.samplenet.com
    image: hyperledger/fabric-kafka:x86_64-1.1.0-preview
    restart: always
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper1.samplenet.com:2181,zookeeper2.samplenet.com:2181,zookeeper3.samplenet.com:2181,
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
    ports:
      - 9092
    depends_on: 
      - zookeeper1.samplenet.com
      - zookeeper2.samplenet.com
      - zookeeper3.samplenet.com
  
  kafka2.samplenet.com:
    container_name: kafka2.samplenet.com
    image: hyperledger/fabric-kafka:x86_64-1.1.0-preview
    restart: always
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper1.samplenet.com:2181,zookeeper2.samplenet.com:2181,zookeeper3.samplenet.com:2181,
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
    ports:
      - 9092
    depends_on: 
      - zookeeper1.samplenet.com
      - zookeeper2.samplenet.com
      - zookeeper3.samplenet.com
  
  kafka3.samplenet.com:
    container_name: kafka3.samplenet.com
    image: hyperledger/fabric-kafka:x86_64-1.1.0-preview
    restart: always
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper1.samplenet.com:2181,zookeeper2.samplenet.com:2181,zookeeper3.samplenet.com:2181,
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
    ports:
      - 9092
    depends_on: 
      - zookeeper1.samplenet.com
      - zookeeper2.samplenet.com
      - zookeeper3.samplenet.com
  

  orderer1.samplenet.com:
    container_name: orderer1.samplenet.com
    image: hyperledger/fabric-orderer:x86_64-1.1.0-preview
    tty: true
    environment:
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_QUEUESIZE=1000
      - ORDERER_GENERAL_MAXWINDOWSIZE=1000
      - ORDERER_RAMLEDGER_HISTORY_SIZE=100
      - ORDERER_GENERAL_BATCHSIZE=10
      - ORDERER_GENERAL_BATCHTIMEOUT=10s
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/fabric/crypto-config/genesis/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=ordererOrgMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/fabric/crypto-config/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/fabric/crypto-config/tls/server.crt
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/fabric/crypto-config/tls/server.key
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/fabric/crypto-config/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./volumes/crypto-config/genesis/:/var/hyperledger/fabric/crypto-config/genesis/
      - ./volumes/crypto-config/ordererOrganizations/samplenet.com/orderers/orderer1.samplenet.com/:/var/hyperledger/fabric/crypto-config/
    ports:
      - 7050:7050
    depends_on: 
      - kafka1.samplenet.com
      - kafka2.samplenet.com
      - kafka3.samplenet.com

  orderer2.samplenet.com:
    container_name: orderer2.samplenet.com
    image: hyperledger/fabric-orderer:x86_64-1.1.0-preview
    tty: true
    environment:
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_QUEUESIZE=1000
      - ORDERER_GENERAL_MAXWINDOWSIZE=1000
      - ORDERER_RAMLEDGER_HISTORY_SIZE=100
      - ORDERER_GENERAL_BATCHSIZE=10
      - ORDERER_GENERAL_BATCHTIMEOUT=10s
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/fabric/crypto-config/genesis/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=ordererOrgMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/fabric/crypto-config/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/fabric/crypto-config/tls/server.crt
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/fabric/crypto-config/tls/server.key
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/fabric/crypto-config/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./volumes/crypto-config/genesis/:/var/hyperledger/fabric/crypto-config/genesis/
      - ./volumes/crypto-config/ordererOrganizations/samplenet.com/orderers/orderer2.samplenet.com/:/var/hyperledger/fabric/crypto-config/
    ports:
      - 7150:7050
    depends_on: 
      - kafka1.samplenet.com
      - kafka2.samplenet.com
      - kafka3.samplenet.com

  orderer3.samplenet.com:
    container_name: orderer3.samplenet.com
    image: hyperledger/fabric-orderer:x86_64-1.1.0-preview
    tty: true
    environment:
      - CONFIGTX_ORDERER_ORDERERTYPE=kafka
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_QUEUESIZE=1000
      - ORDERER_GENERAL_MAXWINDOWSIZE=1000
      - ORDERER_RAMLEDGER_HISTORY_SIZE=100
      - ORDERER_GENERAL_BATCHSIZE=10
      - ORDERER_GENERAL_BATCHTIMEOUT=10s
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/fabric/crypto-config/genesis/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=ordererOrgMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/fabric/crypto-config/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/fabric/crypto-config/tls/server.crt
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/fabric/crypto-config/tls/server.key
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/fabric/crypto-config/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./volumes/crypto-config/genesis/:/var/hyperledger/fabric/crypto-config/genesis/
      - ./volumes/crypto-config/ordererOrganizations/samplenet.com/orderers/orderer3.samplenet.com/:/var/hyperledger/fabric/crypto-config/
    ports:
      - 7250:7050
    depends_on: 
      - kafka1.samplenet.com
      - kafka2.samplenet.com
      - kafka3.samplenet.com


  peer1.org1.samplenet.com:
    container_name: peer1.org1.samplenet.com
    image: hyperledger/fabric-peer:x86_64-1.1.0-preview
    tty: true
    environment:
        - CORE_PEER_ID=peer1.org1.samplenet.com
        - CORE_PEER_ADDRESS=peer1.org1.samplenet.com:7051
        - CORE_PEER_LOCALMSPID=org1MSP
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/crypto-config/msp
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.crt
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.key
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/ca.crt
        - CORE_PEER_ENDORSER_ENABLED=true
        - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.samplenet.com:7051
        - CORE_PEER_GOSSIP_USELEADERELECTION=true
        - CORE_PEER_GOSSIP_ORGLEADER=false
        # This disables mutual auth for gossip
        - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
        - CORE_PEER_PROFILE_ENABLED=true
        - CORE_LEDGER_STATE_STATEDATABASE=goleveldb
        - CORE_LOGGING_LEVEL=debug
        - CORE_NEXT=true
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=samplenet_default
        - GOPATH=/opt/gopath
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
             /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./volumes/crypto-config/peerOrganizations/org1.samplenet.com/peers/peer1.org1.samplenet.com/:/etc/hyperledger/fabric/crypto-config/
    ports:
      - 7051:7051
      - 7053:7053
    depends_on: 
      - orderer1.samplenet.com 
      - orderer2.samplenet.com 
      - orderer3.samplenet.com 

  cli.peer1.org1.samplenet.com:
      container_name: cli.peer1.org1.samplenet.com
      image: hyperledger/fabric-tools:x86_64-1.1.0-preview
      tty: true
      environment:
        - GOPATH=/opt/gopath
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_LOGGING_LEVEL=debug
        - CORE_PEER_ID=peer1.org1.samplenet.com
        - CORE_PEER_ADDRESS=peer1.org1.samplenet.com:7051
        - CORE_PEER_LOCALMSPID=org1MSP
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.crt
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/crypto-config/tls/server.key
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/crypto-config/tls/ca.crt
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/crypto-config/msp
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/crypto-config/users/Admin@org1.samplenet.com/msp
        - ORDERER_CA=/etc/hyperledger/fabric/crypto-config/orderer/msp/tlscacerts/tlsca.samplenet.com-cert.pem
      working_dir: /opt/gopath/src/github.com/hyperledger/fabric
      command: /bin/bash
      volumes:
        - /var/run/:/host/var/run/
        - ./volumes/crypto-config/peerOrganizations/org1.samplenet.com/peers/peer1.org1.samplenet.com/:/etc/hyperledger/fabric/crypto-config/
        - ./volumes/crypto-config/peerOrganizations/org1.samplenet.com/users/:/etc/hyperledger/fabric/crypto-config/users/
        - ./volumes/crypto-config/ordererOrganizations/samplenet.com/orderers/orderer1.samplenet.com/:/etc/hyperledger/fabric/crypto-config/orderer/
        - ./volumes/chaincodes/:/opt/gopath/src/github.com/hyperledger/fabric/chaincodes/
        - ./volumes/crypto-config/channel-artifacts/:/opt/gopath/src/github.com/hyperledger/fabric/channel-artifacts/
      depends_on:
        - peer1.org1.samplenet.com

